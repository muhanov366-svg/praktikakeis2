import datetime

# Представление цифр от 0 до 9 в виде звездочек
number_patterns = {
    '0': [" *** ", "*   *", "*   *", "*   *", "*   *", "*   *", " *** "],
    '1': ["  *  ", " **  ", "* *  ", "  *  ", "  *  ", "  *  ", "*****"],
    '2': [" *** ", "*   *", "    *", "   * ", "  *  ", " *   ", "*****"],
    '3': [" *** ", "*   *", "    *", " *** ", "    *", "*   *", " *** "],
    '4': ["   * ", "  ** ", " * * ", "*  * ", "******", "   * ", "   * "],
    '5': ["**** ", "*    ", "*    ", "***  ", "    *", "*   *", " *** "],
    '6': [" *** ", "*   *", "*    ", "**** ", "*   *", "*   *", " *** "],
    '7': ["******", "    *", "   * ", "  *  ", " *   ", "*    ", "*    "],
    '8': [" *** ", "*   *", "*   *", " *** ", "*   *", "*   *", " *** "],
    '9': [" ****", "*   *", "*   *", " ****", "    *", "    *", " *** "]
}

def draw_number(num):
    pattern = number_patterns.get(str(num), ["     "] * 7)
    for line in pattern:
        print(line)

def display_birthday(day, month, year):
    # Объединяем дату в формате ДД.ММ.ГГГГ
    birthday_str = f"{day:02d}{month:02d}{year:04d}"
    
    # Рисуем каждую цифру
    for digit in birthday_str:
        draw_number(digit)
        print("\n")  # Пробел между цифрами

def get_valid_input(prompt, min_value, max_value):
    while True:
        user_input = input(prompt)
        print(f"Пользователь ввёл: {user_input}")  # Отладка
        
        try:
            value = int(user_input)
            if min_value <= value <= max_value:
                return value
            else:
                print(f"Значение должно быть между {min_value} и {max_value}.")
        except ValueError:
            print("Вы ввели некорректные данные. Попробуйте снова.")

def get_day_of_week(day, month, year):
    date_obj = datetime.date(year, month, day)
    return date_obj.strftime('%A')

def is_leap_year(year):
    """Определяет, является ли год високосным"""
    if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
        return True
    else:
        return False

def calculate_age(birth_day, birth_month, birth_year):
    today = datetime.date.today()
    
    age = today.year - birth_year - ((today.month, today.day) < (birth_month, birth_day))
    return age

# Текущие дата и время
current_date = datetime.datetime.now()

# Запрашиваем ввод данных у пользователя
day = get_valid_input("Введите день вашего рождения: ", 1, 31)
month = get_valid_input("Введите месяц вашего рождения: ", 1, 12)
year = get_valid_input("Введите год вашего рождения: ", 1900, current_date.year)

# Определяем день недели
weekday_name = get_day_of_week(day, month, year)

# Определяем, является ли год високосным
leap_year_status = is_leap_year(year)
if leap_year_status:
    leap_year_message = "Это был високосный год."
else:
    leap_year_message = "Это был невисокосный год."

# Рассчитываем возраст пользователя
age = calculate_age(day, month, year)

# Форматируем вывод даты
formatted_date = f"{day}.{month}.{year}"
print(f"Ваша дата рождения: {formatted_date}, это был {weekday_name}. {leap_year_message}")
print(f"Ваш возраст: {age} лет.\n")

# Выводим дату рождения в стиле цифрового табло
print("Дата вашего рождения в цифровом формате:")
display_birthday(day, month, year)
